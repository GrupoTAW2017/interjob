-- -----------------------------------------------------
-- Important Queries
-- -----------------------------------------------------

-- Show content of each table
SELECT * FROM USER;
SELECT * FROM HOBBY;
SELECT * FROM STUDIES;
SELECT * FROM WORK_EXPERIENCE;
SELECT * FROM MESSAGE;
SELECT * FROM FRIENDSHIP;
SELECT * FROM USER_has_HOBBY;

-- Get STUDIES of a specific USER
SELECT STUDIES.*
FROM USER JOIN STUDIES ON (USER.ID = STUDIES.USER_ID)
WHERE USER.ID = 1
ORDER BY START_DATE;

-- Get WORK EXPERIENCES of a specific USER
SELECT WORK_EXPERIENCE.*
FROM USER JOIN WORK_EXPERIENCE ON (USER.ID = WORK_EXPERIENCE.USER_ID)
WHERE USER.ID = 1
ORDER BY START_DATE;

-- Get HOBBIES of a specific USER
SELECT HOBBY.NAME
FROM USER_has_HOBBY JOIN HOBBY ON (USER_has_HOBBY.HOBBY_ID = HOBBY.ID)
WHERE USER_ID = 1;

-- Check if TWO USERS are FRIENDS
SELECT CONFIRMED
FROM FRIENDSHIP
WHERE (USER_ID = 1 AND USER_ID1 = 2)
   OR (USER_ID = 2 AND USER_ID1 = 1);

-- Get all FRIENDS of a specific USER (= friend list)
SELECT *
FROM USER
WHERE ID IN (SELECT CASE WHEN FRIENDSHIP.USER_ID != 1 
                        THEN FRIENDSHIP.USER_ID
                        ELSE FRIENDSHIP.USER_ID1
                    END AS USER_ID 
             FROM FRIENDSHIP
             WHERE FRIENDSHIP.CONFIRMED = 1
                   AND (FRIENDSHIP.USER_ID = 1 OR FRIENDSHIP.USER_ID1 = 1));

-- All MESSAGES between TWO USERS
SELECT *
FROM MESSAGE
WHERE (USER_FROM = 1 AND USER_TO = 2)
   OR (USER_FROM = 2 AND USER_TO = 1)
ORDER BY DATE;